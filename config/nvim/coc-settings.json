{
  "coc.preferences.formatOnSaveFiletypes": ["rust"],
  "coc.preferences.hoverTarget": "float",
  "diagnostic.messageTarget": "float",
  "signature.target": "float",
  "snippets.priority": 100,
  "snippets.snipmate.enable": false,
  "suggest.floatEnable": true,
  "suggest.echodocSupport": false,
  "suggest.noselect":false,
  "suggest.minTriggerInputLength": 2,
  "suggest.preferCompleteThanJumpPlaceholder":true,
  "suggest.acceptSuggestionOnCommitCharacter": true,
  "suggest.snippetIndicator": "â–º",
  "rust.rustfmt_path": "~/.cargo/bin/rustfmt",
  "rust.full_docs": true,
  "rust.clippy_preference": "on",
  "python.jediEnabled": false,
  "vetur.experimental.templateInterpolationService": false,
  "vetur.validation.template": false,
  "eslint.filetypes": [ "javascript", "typescript", "vue" ],
  "list.insertMappings": {
    "<C-n>": "normal:j",
    "<C-p>": "normal:k",
    "<C-f>": "prompt:left",
    "<C-b>": "prompt:right"
  },
  "yaml.schemas": {
    "https://raw.githubusercontent.com/awslabs/goformation/master/schema/cloudformation.schema.json": "/cloudformation/*.yml"
  },
  "yaml.customTags": [
    "!Ref",
    "!Sub scalar",
    "!Sub sequence",
    "!Join sequence",
    "!FindInMap sequence",
    "!GetAtt scalar",
    "!GetAtt sequence",
    "!Base64 mapping",
    "!GetAZs",
    "!Select scalar",
    "!Select sequence",
    "!Split sequence",
    "!ImportValue",
    "!Condition",
    "!Equals sequence",
    "!And",
    "!If",
    "!Not",
    "!Or"
  ],

  "languageserver": {
    "haskell": {
      "command": "hie-wrapper",
      "rootPatterns": [".stack.yaml", "cabal.config", "package.yaml"],
      "filetypes": ["hs", "lhs", "haskell"],
      "initializationOptions": {},
      "settings": {
        "languageServerHaskell": {
          "hlintOn": false,
          "maxNumberOfProblems": 10,
          "completionSnippetsOn": true
        }
      }
    },
    "intelephense": {
      "command": "intelephense",
      "args": ["--stdio"],
      "filetypes": ["php"],
      "initializationOptions": {
        "storagePath": "/tmp/intelephense"
      }
    },
    "kotlin": {
      "command": "kotlin-language-server",
      "filetypes": ["kt", "kotlin"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    }
  }
}
