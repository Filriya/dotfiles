env:
  TERM: xterm-256color

window:
  dimensions:
    columns: 0
    lines: 0

  position:
    x: 0
    y: 0

  # padding:
  #   x: 0
  #   y: 0

  decorations: buttonless

  # startup_mode: Windowed
  startup_mode: Maximized
  # startup_mode: Fullscreen
  # startup_mode: SimpleFullscreen

scrolling:
  history: 10000

# tabspaces: 8

fonts:
  default: &default
    size: 22.0

  uni: &uni
    normal: {family: "S2G Uni font", style: Regular}
    bold: { family: "S2G Uni font", style: Regular }
    italic: { family: "S2G Uni font", style: Regular }
    # size: 22
    size: 22
    # use_thin_strokes: true
    offset: {x: 0, y: 0}

  uni_nerd: &uni_nerd
    normal: {family: "S2Gうにフォント", style: Regular}
    bold: { family: "S2Gうにフォント", style: Regular }
    italic: { family: "S2Gうにフォント", style: Regular }
    # size: 22
    size: 22
    # use_thin_strokes: true
    offset: {x: 0, y: 15}

  ricty: &ricty
    normal: {family: "Ricty Discord for Powerline", style: Regular}
    bold: { family: "Ricty Discord for Powerline", style: Bold }
    italic: { family: "Ricty Discord for Powerline", style: Oblique }
    # size: 22
    size: 24
    # use_thin_strokes: true
    offset: {x: 0, y: 10}

  moon: &moon
    normal: { family: "S2G Moon Font", style: Regular }
    bold: { family: "S2G Moon Font", style: Regular }
    italic: { family: "S2G Moon Font", style: Regular }
    # size: 22
    size: 22
    # use_thin_strokes: true
    offset: {x: 0, y: 15}

  luna: &luna
    normal: { family: "S2G Luna Font", style: Regular }
    bold: { family: "S2G Luna Font", style: Regular }
    italic: { family: "S2G Luna Font", style: Regular }
    # size: 22
    size: 22
    # use_thin_strokes: true
    offset: {x: 0, y: 15}

  sea: &sea
    normal: { family: "S2G Sea Font", style: Regular }
    bold: { family: "S2G Sea Font", style: Regular }
    italic: { family: "S2G Sea Font", style: Regular }
    # size: 22
    size: 22
    # use_thin_strokes: true
    offset: {x: 0, y: 15}

  jetbrains: &jetbrains
    normal: { family: "JetBrains Mono", style: "Regular" }
    bold: { family: "JetBrains Mono", style: "Bold" }
    italic: { family: "JetBrains Mono", style: "Italic" }
    # size: 19.0
    size: 22.0
    # use_thin_strokes: true
    offset: {x: 0, y: 7}

  sarasa: &sarasa
    normal: { family: "更紗等幅ゴシック J", style: Regular }
    bold: { family: "更紗等幅ゴシック J", style: Bold }
    italic: { family: "更紗等幅ゴシック J", style: Italic }
    # size: 19.0
    size: 22.0
    # use_thin_strokes: true
    offset: {x: 1, y: 2}

  sourcehan: &sourcehan
    normal: { family: "源ノ角ゴシック Code JP", style: N }
    bold: { family: "源ノ角ゴシック Code JP", style: B }
    italic: { family: "源ノ角ゴシック Code JP", style: N It }
    # size: 19.0
    size: 22.0
    # use_thin_strokes: true
    offset: {x: 0, y: 5}

  yutapon: &yutapon
    normal: { family: "ゆたぽん（コーディング）", style: Regular }
    bold: { family: "ゆたぽん（コーディング）Bold", style: Bold }
    italic: { family: "ゆたぽん（コーディング）Bold", style: Bold }
    # size: 20.0
    size: 22.0
    # use_thin_strokes: true
    offset: {x: 0, y: 15}


# `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
# !@#$%^&*()-_=
#
# +[]{}\|
# ;:'",./<>?

# font: *default
font: *uni_nerd
# font: *ricty
# font: *moon
# font: *luna
# font: *sea
# font: *jetbrains
# font: *sarasa
# font: *sourcehan
# font: *yutapon

schemes:
  ayu-mirage: &ayu-mirage
    primary:
      # background: '0x243742'
      background: '0x1f2430'
      foreground: '0xabb2bf'

    cursor:
      text: '0x373E4C'
      cursor: '0xFFCC66'

    selection:
      text: '0x586071'
      background: '0x2A3546'

    # Normal colors
    normal:
      black: '0x1A1E29'
      red: '0xF28779'
      green: '0xBAE67E'
      yellow: '0xFFD580'
      blue: '0x73D0FF'
      magenta: '0xD4BFFF'
      cyan: '0x95E6CB'
      white: '0xC7C7C7'

    # Bright colors
    bright:
      black: '0x686868'
      red: '0xF28779'
      green: '0xBAE67E'
      yellow: '0xFFD580'
      blue: '0x73D0FF'
      magenta: '0xD4BFFF'
      cyan: '0x95E6CB'
      white: '0xFFFFFF'
  palenight: &palenight
    primary:
      background: '0x292d3e'
      foreground: '0x959dcb'

    cursor:
      text: '0x292d3e'
      cursor: '0x959dcb'

    normal:
      black:   '0x292d3e'
      red:     '0xf07178'
      green:   '0xc3e88d'
      yellow:  '0xffcb6b'
      blue:    '0x82aaff'
      magenta: '0xc792ea'
      cyan:    '0x89ddff'
      white:   '0x959dcb'

    bright:
      black:   '0x676e95'
      red:     '0xf78c6c'
      green:   '0x444267'
      yellow:  '0x32374d'
      blue:    '0x8796b0'
      magenta: '0x959dcb'
      cyan:    '0xff5370'
      white:   '0xffffff'

colors: *ayu-mirage
# colors: *palenight

# draw_bold_text_with_bright_colors: false

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0

selection:
  # semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

# Allow terminal applications to change Alacritty's window title.
dynamic_title: true

cursor:
  style: Block
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

shell:
  program: "zsh"
  args:
    - --login

working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
# alt_send_esc: true

mouse:
  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

  url:
    launcher:
      program: open
      args: []

    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
  # - { key: Back, action: None }
  # (Windows/Linux only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  - { key: Q,      mods: Control,         chars: "\x11" }

  # (macOS only)
  - { key: Key0,   mods: Command,         action: ResetFontSize          }
  - { key: Equals, mods: Command,         action: IncreaseFontSize       }
  - { key: Add,    mods: Command,         action: IncreaseFontSize       }
  - { key: Minus,  mods: Command,         action: DecreaseFontSize       }
  - { key: K,      mods: Command,         action: ClearHistory           }
  - { key: V,      mods: Command,         action: Paste                  }
  - { key: C,      mods: Command,         action: Copy                   }
  - { key: Q,      mods: Command,         action: Quit                   }
  - { key: W,      mods: Command,         action: Quit                   }
  # - { key: F,      mods: Command,         action: ToggleSimpleFullscreen }
  - { key: N,      mods: Command,         action: SpawnNewInstance       }
  - { key: H,      mods: Command,         command:
      { program: "osascript", args: [ "/Users/filriya/bin/alacritty_hide.scpt" ] }
    }

  # - { key: Paste,                    action: Paste                            }
  # - { key: Copy,                     action: Copy                             }
  # - { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  # - { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  # - { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  # - { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }
