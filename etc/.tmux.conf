set -g update-environment " ITERM_PROFILE"
set -g status-position bottom
set-option -g history-limit 3000
TMUX_FZF_SED=/usr/local/bin/sed
set-option -g utf8-cjk off


set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux.bundle/'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'

run-shell -b '~/.tmux.bundle/tpm/tpm'

set -g @resurrect-strategy-vim 'session'

# マウス操作
set-option -g mouse on
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# prefixキーをC-aに変更する
set -g prefix C-a

# C-bのキーバインドを解除する
unbind C-b

set -sg escape-time 10 # キーストロークのディレイを減らす
set -g base-index 1 # ウィンドウのインデックスを1から始める
setw -g pane-base-index 1 # ペインのインデックスを1から始める
set-option -g set-titles on

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# list all keys
bind ? list-keys

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# セッション
bind C new-session
bind e choose-tree -Zs -O 'name'
bind C-e choose-tree -Zs -O 'name'

# ウインドウ
# bind c new-window -c '#{pane_current_path}'

# ペイン
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'


# レイアウト
bind L source-file ~/.tmux/new-session

# ペイン移動
source-file ~/.tmux/bind_select_pane

# ペインリサイズ
bind -n M-Left resize-pane -L 5
bind -n M-Down resize-pane -D 5
bind -n M-Up resize-pane -U 5
bind -n M-Right resize-pane -R 5

# 選択されているペインを右側にあるウィンドウへ移動する
bind -n M-S-Right join-pane -h -t :+
# 選択されているペインを左側にあるウィンドウへ移動する
bind -n M-S-Left join-pane -h -t :-
# 選択されているペインを現在のウィンドウから、新ウィンドウを作成しそこに移動する
bind -n M-S-Down break-pane

bind -n M-S-Up swap-pane -d -t 1


unbind -n left
unbind -n down
unbind -n up
unbind -n right

bind \\ resize-pane -Z

# 別のセッションがあれば接続
bind -n C-d run-shell " \
  if [ #{session_windows} -eq 1 ] && \
    [ #{window_panes} -eq 1 ] &&   \
    [ #{pane_current_command} = 'zsh' -o #{pane_current_command} = 'zsh' ]; then \
    if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then \
      tmux switch-client -ln;  \
    fi; tmux kill-session -t \"#S\"; \
  else       \
   tmux send-keys C-d; \
  fi;\
  "

# zoom状態の時はselect-paneを無効に
set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
set-hook -g after-select-window "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
set-hook -g after-split-window "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
# set-hook -g after-client-switch "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""

# kill
bind K kill-pane
bind Q run-shell " \
  if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then \
      tmux switch-client -ln;  \
  fi; tmux kill-session -t \"#S\"; \
  "

bind P switch-client -p
bind N switch-client -n

bind C-[ copy-mode

# コマンド複数画面一括入力
# bind ` setw synchronize-panes on
# bind ~ setw synchronize-panes off

# open project
# https://qh73xebitbucketorg.readthedocs.io/ja/latest/2.Tools/tmux/tips/
# bind t split-window 'eval `tmux-open-project`'
# bind t split-window 'tmux-open-project'
bind t run -b tmux-open-project

# 画面番号
bind q display-panes
set -g display-panes-time 5000

# truecolor
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",*256color*:RGB,*:U8=0"

# source ~/.tmux/dark
# if-shell 'test $ITERM_PROFILE = "light"' "source-file ~/.tmux/light"

# Common
status_bg="default"
border_bg="default"
border_fg="#505050"
# border_active_fg=yellow
# border_active_fg=red
border_active_fg=blue
# border_active_fg=green

# Pane Border
set-option -g pane-border-format "  #P #(tmux-pane-border #{pane_current_command} #{pane_pid})"
set -g pane-border-style "bg=$border_bg,fg=$border_fg"
set -g pane-active-border-style "bg=$border_bg,fg=$border_active_fg"

# Window
set -g message-style "fg=default,bg=default" # コマンドライン

# Status
# https://wonderwall.hatenablog.com/entry/2016/07/02/002553
set -g status-style "bg=$status_bg,fg=default"
set -g status-left "#[fg=yellow]#S #[fg=red]w:#I #[fg=cyan]p:#P "
set -g status-right '#{ram_fg_color}M: #{ram_percentage} #[fg=default]| #{cpu_fg_color}C: #{cpu_percentage} #[fg=default]|#{battery_color_fg}#[bg=default] B: #{battery_percentage} #[fg=default]| #[fg=cyan][%Y-%m-%d(%a) %T] '

# Status window
setw -g window-status-format "#[fg=default]#I:#W#{?window_zoomed_flag,:Z,}"
setw -g window-status-current-format "#{?window_zoomed_flag,#[fg=black]#[bg=yellow]#[bold]#I:#W:Z,#[fg=yellow]#[bold]#I:#W}#[default]"
setw -g window-status-activity-style "fg=blue,bg=default"

# ステータスバーを設定する
set -g status-interval 1
set -g status-position top
set -g status-left-length 80
set -g status-right-length 200

# ペインボーダーの設定
set-option -g pane-border-status top

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi

## コピーモードの操作をvi風に設定する
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
unbind   -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Escape send-keys -X cancel

bind v run "pbpaste | tmux load-buffer - && tmux paste-buffer"

