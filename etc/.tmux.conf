set -ga update-environment " ITERM_PROFILE"
# set-option -g utf8-cjk on
# set -g status-position top
set -g status-position bottom
set-option -g history-limit 3000

# マウス操作
set-option -g mouse on
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# prefixキーをC-aに変更する
set -g prefix C-a

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 10

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

set-option -g set-titles on

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# セッション
bind C new-session
bind q choose-session

# ペイン
bind | split-window -h
bind - split-window -v

# レイアウト
bind L source-file ~/.tmux/new-session

# カラースキーマ
# bind t source-file ~/.tmux/dark
# bind T source-file ~/.tmux/light
bind I run-shell "open /Applications/iTerm.app"

# ペイン移動
source-file ~/.tmux/bind_select_pane

# ペインリサイズ
bind -n S-left resize-pane -L 5
bind -n S-down resize-pane -D 5
bind -n S-up resize-pane -U 5
bind -n S-right resize-pane -R 5
bind \ resize-pane -Z

# 別のセッションがあれば接続
bind -n C-d run-shell " \
  if [ #{session_windows} -eq 1 ] && \
    [ #{window_panes} -eq 1 ] &&   \
    [ #{pane_current_command} = 'zsh' -o #{pane_current_command} = 'zsh' ]; then \
    if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then \
      tmux switch-client -ln;  \
    fi; tmux kill-session -t \"#S\"; \
  else       \
   tmux send-keys C-d; \
  fi;\
  "

# zoom状態の時はselect-paneを無効に
set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
set-hook -g after-select-window "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
set-hook -g after-split-window "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
set-hook -g after-switch-client "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""

bind K swap-pane -U
bind J swap-pane -D

# kill
bind K kill-pane
# bind Q kill-window
# 別のセッションがあれば接続
bind Q run-shell " \
  if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then \
      tmux switch-client -ln;  \
  fi; tmux kill-session -t \"#S\"; \
  "

# 選択されているペインを右側にあるウィンドウへ移動する
bind -n C-Right join-pane -h -t :+
# 選択されているペインを左側にあるウィンドウへ移動する
bind -n C-Left join-pane -h -t :-
# 選択されているペインを現在のウィンドウから、新ウィンドウを作成しそこに移動する
bind -n C-Down break-pane

# コマンド複数画面一括入力
# bind ` setw synchronize-panes on
# bind ~ setw synchronize-panes off

# 画面番号
bind e display-panes
set -g display-panes-time 2000

# truecolor
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc,*:U8=0"

source ~/.tmux/dark
if-shell 'test $ITERM_PROFILE = "light"' "source-file ~/.tmux/light"

# 罫線を連続したものに
# set -ga terminal-overrides ',*:U8=0'

# ステータスバーを設定する
set -g status-left-length 40
set -g status-left "#[fg=yellow]#S #[fg=red]#I #[fg=cyan]#P  "
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %T]"
set -g status-interval 1
set -g status-position top;
setw -g window-status-format "#[fg=Black,bold]#I:#W#{?window_zoomed_flag,:✨,}"
setw -g window-status-current-format "#[fg=white,bold]#I:#W#{?window_zoomed_flag,:✨,}#[default]"
setw -g window-status-activity-style "fg=yellow,bg=default"


# ペインボーダーの設定
set-option -g pane-border-status top
set-option -g pane-border-format "#P #(tmux-pane-border #{pane_current_command} #{pane_pid})"

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi

## コピーモードの操作をvi風に設定する
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

