set -ga update-environment " ITERM_PROFILE"
set -g status-position bottom
set-option -g history-limit 3000
TMUX_FZF_SED=/usr/local/bin/sed

set -g @plugin 'sainnhe/tmux-fzf'

set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'filriya/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-plugins/tmux-resurrect \

# マウス操作
set-option -g mouse on
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# prefixキーをC-aに変更する
set -g prefix C-a

# C-bのキーバインドを解除する
unbind C-b

set -sg escape-time 10 # キーストロークのディレイを減らす
set -g base-index 1 # ウィンドウのインデックスを1から始める
setw -g pane-base-index 1 # ペインのインデックスを1から始める
set-option -g set-titles on

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# list all keys
bind ? list-keys

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# セッション
bind C new-session
bind q choose-tree -Zs

# ペイン
bind | split-window -h
bind - split-window -v

# レイアウト
bind L source-file ~/.tmux/new-session

# ペイン移動
source-file ~/.tmux/bind_select_pane

# ペインリサイズ
bind -n S-left resize-pane -L 5
bind -n S-down resize-pane -D 5
bind -n S-up resize-pane -U 5
bind -n S-right resize-pane -R 5

bind \\ resize-pane -Z

# 別のセッションがあれば接続
bind -n C-d run-shell " \
  if [ #{session_windows} -eq 1 ] && \
    [ #{window_panes} -eq 1 ] &&   \
    [ #{pane_current_command} = 'zsh' -o #{pane_current_command} = 'zsh' ]; then \
    if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then \
      tmux switch-client -ln;  \
    fi; tmux kill-session -t \"#S\"; \
  else       \
   tmux send-keys C-d; \
  fi;\
  "

# zoom状態の時はselect-paneを無効に
set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
set-hook -g after-select-window "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
set-hook -g after-split-window "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""
# set-hook -g after-client-switch "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"source-file ~/.tmux/unbind_select_pane\" \"source-file ~/.tmux/bind_select_pane\""

# kill
bind K kill-pane
bind Q run-shell " \
  if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then \
      tmux switch-client -ln;  \
  fi; tmux kill-session -t \"#S\"; \
  "

# 選択されているペインを右側にあるウィンドウへ移動する
bind -n M-Right join-pane -h -t :+
# 選択されているペインを左側にあるウィンドウへ移動する
bind -n M-Left join-pane -h -t :-
# 選択されているペインを現在のウィンドウから、新ウィンドウを作成しそこに移動する
bind -n M-Down break-pane

bind P switch-client -p
bind N switch-client -n

bind C-[ copy-mode

# コマンド複数画面一括入力
# bind ` setw synchronize-panes on
# bind ~ setw synchronize-panes off

# open project
# https://qh73xebitbucketorg.readthedocs.io/ja/latest/2.Tools/tmux/tips/
bind t split-window 'eval `echo-open-project-command`'

# 画面番号
bind e display-panes
set -g display-panes-time 2000

# truecolor
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",*256color*:RGB,*:U8=0"

source ~/.tmux/dark
# if-shell 'test $ITERM_PROFILE = "light"' "source-file ~/.tmux/light"

# ステータスバーを設定する
set -g status-interval 1
set -g status-position top
set -g status-left-length 80
set -g status-right-length 200

# ペインボーダーの設定
set-option -g pane-border-status top

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi

## コピーモードの操作をvi風に設定する
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
unbind   -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Escape send-keys -X cancel

run -b '~/.tmux.bundle/tpm/tpm'

